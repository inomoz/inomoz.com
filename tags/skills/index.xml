<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>skills, on Inomoz</title><link>https://inomoz.com/tags/skills/</link><description>Recent content in skills, on Inomoz</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 12 Feb 2022 00:00:00 +0300</lastBuildDate><atom:link href="https://inomoz.com/tags/skills/index.xml" rel="self" type="application/rss+xml"/><item><title>Чистый Код</title><link>https://inomoz.com/posts/martinchistyykod101/</link><pubDate>Sat, 12 Feb 2022 00:00:00 +0300</pubDate><guid>https://inomoz.com/posts/martinchistyykod101/</guid><description>&lt;h2 id="martinChistyyKod101">Предисловие&lt;/h2>
&lt;p>Честность в мелочах вовсе не честность&lt;/p>
&lt;h3 id="честность-в-мелочах-вовсе-не-мелочь">Честность в мелочах вовсе не мелочь&lt;/h3>
&lt;p>Датская поговорка. Альтернативы - бог скрывается в мелочах. Концепция программирования зависящая только от тестов и кода уже устарела. Мелочи важнее чем любые планы. Обращая внимание на мелочи вы приобретаете необходимую практику.&lt;/p>
&lt;h3 id="сопровождение">Сопровождение&lt;/h3>
&lt;p>В программировании 80+% того что мы делаем мы называем сопровождением.&lt;/p>
&lt;p>1951 г. - появилась методология TPM (Total Productive maintenance). Ориентирована прежде всего на сопровождение а не на производство. Основаня на приципах 5S.
Ее принципы заложены в методолгии &lt;a href="https://inomoz.com/posts/20220123190452-lean/">LEAN&lt;/a>.&lt;/p>
&lt;p>Хорошая практика программирования требует сосредоточенность, присутствие духа и мышление.&lt;/p>
&lt;p>Философия 5S:&lt;/p>
&lt;ul>
&lt;li>Организация (сейри), грамотное именование.&lt;/li>
&lt;li>Аккуратность (сейтон), всему своё место.&lt;/li>
&lt;li>Чистка (сейсо), код не должен быть захламлённым.&lt;/li>
&lt;li>Стандартизация (сэйкэцу), придерживайтесь единого стиля в коде.&lt;/li>
&lt;li>Дисциплина (сюцукэ), нужно следовать правилам, размышлять о работе и быть готовым к изменениям в самом себе.&lt;/li>
&lt;/ul>
&lt;h3 id="описание-принципов">Описание принципов&lt;/h3>
&lt;p>Следуя этим принципам вы значительно уменьшаете вероятность возникновения ошибок, вы стараетесть переработать уже существующий код под эти принципы, ваш код удобочитаем, спорные части вы переписываете сразу-же.&lt;/p>
&lt;blockquote>
&lt;p>Чистота ведет к божественности.&lt;/p>
&lt;/blockquote>
&lt;!--quoteend-->
&lt;blockquote>
&lt;p>Тот кто верен в мелочах, верен во всем.&lt;/p>
&lt;/blockquote>
&lt;!--quoteend-->
&lt;blockquote>
&lt;p>Ранняя пташка червяка ловит.&lt;/p>
&lt;/blockquote>
&lt;!--quoteend-->
&lt;blockquote>
&lt;p>Не откладывай на завтра то, что можно сделать сегодня.&lt;/p>
&lt;/blockquote>
&lt;!--quoteend-->
&lt;blockquote>
&lt;p>Из маленьких желудей вырастают большие дубы.&lt;/p>
&lt;/blockquote>
&lt;!--quoteend-->
&lt;blockquote>
&lt;p>Дорога ложка к обеду.&lt;/p>
&lt;/blockquote>
&lt;!--quoteend-->
&lt;blockquote>
&lt;p>Яблочко на ужин и доктор не нужен.&lt;/p>
&lt;/blockquote>
&lt;h3 id="непрерывное-улучшение">Непрерывное улучшение&lt;/h3>
&lt;p>Каждое действие для проектирования можно рассматривать как атомарное восстановление. Стихотвроение никогда не бывает законченным, оно требует непрерывного улучшения, прекратить работу над ним значит бросить его.&lt;/p>
&lt;p>Невнимательность к мелочам или их игнорирование, зацикливание на внешнем виде в конечном итоге обходится недёшево.&lt;/p>
&lt;h3 id="зависимость-ошибок-от-стиля-программирования">Зависимость ошибок от стиля программирования&lt;/h3>
&lt;p>В ходе исследований в BELL labs выяснилось что последовательный стиль применения отступов является одним из самых статистически значимых признаков низкой плотности ошибок.&lt;/p>
&lt;p>Качество кода возникает в результате миллиона проявлений нбезразличного отношения к коду, а не от применения супер методов.&lt;/p>
&lt;h3 id="рассматривайте-свой-код-dot-dot-dot">Рассматривайте свой код&amp;hellip;&lt;/h3>
&lt;p>Рассматривайте свой код как красивое воплощение благородных усилий по проектированию - как процесс, а не статистически конечной точки.&lt;/p>
&lt;h3 id="честность">Честность&lt;/h3>
&lt;p>Как уже было сказано важно быть честным в мелочах. Нужно делать все возможное для улучшеня вашего кода и стараться делать его лучше чем он был.&lt;/p>
&lt;h3 id="flashcards">Flashcards&lt;/h3>
&lt;h4 id="мелочи-важны">Мелочи важны&lt;/h4>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Front&lt;/p>
&lt;p>Обращая внимание на мелочи вы приобретаете, вы приобретаете?&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Back&lt;/p>
&lt;p>Концепция программирования зависящая только от тестов и кода уже устарела. Мелочи важнее чем любые планы. Обращая внимание на мелочи вы приобретаете необходимую практику.&lt;/p>
&lt;p>Как уже было сказано важно быть честным в мелочах. Нужно делать все возможное для улучшеня вашего кода и стараться делать его лучше чем он был.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="5s">5S&lt;/h4>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Front&lt;/p>
&lt;p>Назовите основые принципы философии 5S&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Back&lt;/p>
&lt;ul>
&lt;li>Организация (сейри), грамотное именование.&lt;/li>
&lt;li>Аккуратность (сейтон), всему своё место.&lt;/li>
&lt;li>Чистка (сейсо), код не должен быть захламлённым.&lt;/li>
&lt;li>Стандартизация (сэйкэцу), придерживайтесь единого стиля в коде.&lt;/li>
&lt;li>Дисциплина (сюцукэ), нужно следовать правилам, размышлять о работе и быть готовым к изменениям в самом себе.&lt;/li>
&lt;/ul>
&lt;p>Следуя этим принципам вы значительно уменьшаете вероятность возникновения ошибок, вы стараетесть переработать уже существующий код под эти принципы, ваш код удобочитаем, спорные части вы переписываете сразу-же.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="зачем">Зачем&lt;/h4>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Front&lt;/p>
&lt;p>Почему важно обращать внимание на мелочи в контексте разработки, в чем основная суть?&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Back&lt;/p>
&lt;p>Невнимательность к мелочам или их игнорирование, зацикливание на внешнем виде в конечном итоге обходится недёшево.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="небезразличие">Небезразличие&lt;/h4>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Front&lt;/p>
&lt;p>Есть ли какие либо сверх-универсальные методы для достижения качества кода? Или нужно просто придерживаться небезразличного отношения к коду?&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Back&lt;/p>
&lt;p>Скорее второе, я думаю есть методы позволяющие улучшить код, но они могут быть не всегда применимы, а если придерживаться второго пункта то качество кода улучшиться.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="идеальный-код">Идеальный код&lt;/h4>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Front&lt;/p>
&lt;p>Когда ваш код становится идеальным?&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Back&lt;/p>
&lt;p>Я думаю никогда.
Рассматривайте свой код как красивое воплощение благородных усилий по проектированию - как процесс, а не статистически конечной точки.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="введение">Введение&lt;/h2>
&lt;h3 id="профессионализм">Профессионализм&lt;/h3>
&lt;figure>&lt;img src="https://inomoz.com/ox-hugo/20220123-212705_screenshot.png"/>
&lt;/figure>
&lt;p>Что позволяет избежать поток ужасных ошибок, отладку в панике, напор начальства? Правильный ответ профессионализм.&lt;/p></description></item><item><title>The clean coder: A code of conduct for professional programmers</title><link>https://inomoz.com/posts/martincleancodercode2011/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://inomoz.com/posts/martincleancodercode2011/</guid><description>&lt;h2 id="martinCleanCoderCode2011">The clean coder: A code of conduct for professional programmers&lt;/h2></description></item><item><title>The pragmatic programmer: From journeyman to master</title><link>https://inomoz.com/posts/huntpragmaticprogrammerjourneyman1999/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://inomoz.com/posts/huntpragmaticprogrammerjourneyman1999/</guid><description>&lt;h2 id="huntPragmaticProgrammerJourneyman1999">The pragmatic programmer: From journeyman to master&lt;/h2></description></item><item><title>Код: тайный язык информатики</title><link>https://inomoz.com/posts/petzoldkodtaynyyyazyk101/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://inomoz.com/posts/petzoldkodtaynyyyazyk101/</guid><description>&lt;h2 id="petzoldKodTaynyyYazyk101">Код: тайный язык информатики&lt;/h2>
&lt;h3 id="предисловие-к-оригинальному-изданию">Предисловие к оригинальному изданию&lt;/h3>
&lt;h4 id="разница-между-оперативной-и-дисковой-памятью">Разница между оперативной и дисковой памятью&lt;/h4>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Front&lt;/p>
&lt;p>Чем обсуловлена разница между оперативной и дисковой памятью?&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Back&lt;/p>
&lt;p>Эта разница довольно условна (исскуственная), она обусловлена лишь тем что в настоящий момент отсутсвует единый энергонезависимый и быстродействующий носитель (но есть тенденция к изменениям - SSD NVRAM, etc&amp;hellip;)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="иерархичность-компьютеров">Иерархичность компьютеров&lt;/h4>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Front&lt;/p>
&lt;p>Какие уровни иерархии компьютера вы знаете?&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Back&lt;/p>
&lt;p>По своей сути компьютеры (и я так думаю сопутствующие технологии) иерархичны.&lt;/p>
&lt;ol>
&lt;li>Самый нижний уровень, транзисторы.&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;li>Информация которая выводится на монитор (пиксели).&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h4 id="код-это">Код это&lt;/h4>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Front&lt;/p>
&lt;p>Какие определения кода вы знаете?&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Back&lt;/p>
&lt;ol>
&lt;li>Система сигналов для представления букв и цифр при передачи сообщений.&lt;/li>
&lt;li>Система символов, букв или слов, которым присваиваются некоторые произвольно подобранные значения (для передачи конфендициальной информации).&lt;/li>
&lt;li>Система символов, применяемая для представления компьютерных команд&amp;hellip;&lt;/li>
&lt;/ol>
&lt;p>Глава 1 лучшие друзья&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="глава-1-dot-лучшие-друзья">Глава 1. Лучшие друзья&lt;/h3>
&lt;h4 id="обмен-информацией">Обмен информацией&lt;/h4>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Front&lt;/p>
&lt;p>Допустим вы владеете алфавитом и у вас есть 2 фонарика, каким образом можно обменятся информацией при их помощи?&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Back&lt;/p>
&lt;p>Можно рисовать буквы в воздухе, но этот метод крайне неточен и малоэффективен.&lt;/p>
&lt;p>Можно кодировать каждую букву алфавита последовательностями бликов, А - 1 блик, Б - 2 блика и т.д.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="коммуникация">Коммуникация&lt;/h4>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Front&lt;/p>
&lt;p>Стремится ли человек к коммуникаци? Что обеспечивает коммуникацию?&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Back&lt;/p>
&lt;p>Человек стремится (желает) к коммуникации - считается что это одно из множества
характеризующих человека качеств.
Человек это социальное существо, ему необходимо общество других людей.&lt;/p>
&lt;p>Код обеспечивает коммуникацию (при помощи кода можно организовать коммуникацию).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="азбука-морзе">Азбука морзе&lt;/h4>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Front&lt;/p>
&lt;p>Сколько видов сигналов в азбуке морзе?&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Back&lt;/p>
&lt;p>В азбуке морзе 2 вида бликов / звуков (сигналов). короткие и долгие (точки и тире).&lt;/p>
&lt;p>&lt;img src="https://inomoz.com/ox-hugo/20220130-223511_screenshot.png" alt="">
Рис. Азбука морзе.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="cловарь">Cловарь&lt;/h4>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Front&lt;/p>
&lt;p>Является ли словарь кодом?&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Back&lt;/p>
&lt;p>Можно сказать что словарь, это своеобразный код.
При этом словарь описывает человечекую речь.
Речь так-же можно охаректиризовать как код, так-как мы используем различные звуки и слова для кодирования информации.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="виды-кодов">Виды кодов&lt;/h4>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Front&lt;/p>
&lt;p>В реальной жизни мы используем множество различных кодов, речь, писменность, азбука морзе и т.д. Прослеживается ли такая тенденция в компьютере?&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Back&lt;/p>
&lt;p>Да, в компьютере применяются различные типы кодов для хранения и передачи чисел, текста, звуков, музыки, изображений и видео. Причем для каждого типа используется множество различных кодов.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="основы-азбуки-морзе">Основы азбуки морзе&lt;/h4>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Front&lt;/p>
&lt;p>Какие основы азбуки Морзе вы знаете?&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Back&lt;/p>
&lt;p>Точка - базовый сигнал (допустим 1 секунда).
Тире - втрое длинее точки - вторичный сигнал (длительность 3*длительность точки).&lt;/p>
&lt;p>Пауза между безовым и вторичным сигналом равна длительности точки (допустим 1 секунда).
Пауза между словами 2 тире (допустим 1 * 3 * 2 = 6 секунд)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="способ-кодирования">Способ кодирования&lt;/h4>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Front&lt;/p>
&lt;p>Выбраны ли коды в азбуке морзе произвольно или использовался какой-то принцип?&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Back&lt;/p>
&lt;p>В азбуе морзе (как и в схожих по своей сути кодах) используется частотный принцип. То есть чем чаще используется кусок информации (частотность букв, символов и т.д.) тем проще он закодирован.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="глава-2-dot-коды-и-комбинации">Глава 2. Коды и комбинации&lt;/h3>
&lt;p>что значит двоичный?
что такое комбинаторный анализ?&lt;/p>
&lt;h4 id="комбинации-в-коде">Комбинации в коде&lt;/h4>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Front&lt;/p>
&lt;p>Комбинация - это?&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Back&lt;/p>
&lt;p>Последовательность кодовых символов, соответствующих одному элементу (символу) дискретного сообщении.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="значность">Значность&lt;/h4>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Front&lt;/p>
&lt;p>Число символов в кодовой комбинации называется?&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Back&lt;/p>
&lt;p>Значностью кода.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="зависимость-количества-символов-и-кодов">Зависимость количества символов и кодов&lt;/h4>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Front&lt;/p>
&lt;p>Как найти количество кодов в азбуке морзе? Если мы знаем количество точек и тире.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Back&lt;/p>
&lt;p>\(codes=2^{number}\)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="граф-азбуки-морзе">Граф азбуки морзе&lt;/h4>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Front&lt;/p>
&lt;p>Попробуйте описать схему азбуки морзе для определения кода морзе (комбинация -&amp;gt; символ). Схема выполнена в виде графа связей.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Back&lt;/p>
&lt;p>В схеме постепенно усложняются последовательности точек и тире. Для расшифровки читаем схему слева направо.
Декодируется в таком порядке: разбиваем комбинацию на символы (точка или тире), ищем начальный символ в графе, затем следующий символ в графе и так пока мы не пройдем через все символы.
Соответственно у нас есть граф связей по 1 символу (символ -&amp;gt; стрелка), и они определены в соответствии с частотой символов. Точки у нас всегда слева, тире всегда справа. Определяем комбинацию по стрелкам.&lt;/p>
&lt;figure>&lt;img src="https://inomoz.com/ox-hugo/20220131-114323_screenshot.png"/>
&lt;/figure>
&lt;/li>
&lt;/ul>
&lt;h4 id="двоичный">Двоичный&lt;/h4>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Front&lt;/p>
&lt;p>Что значит двоичный на примере азбуки морзе?&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Back&lt;/p>
&lt;p>Код морзе двоичный (буквально два на два), так-как каждая комбинация в этом коде включает только 2 символа - точку и тире.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="глава-3-dot-брайль-и-двоичные-коды">Глава 3. Брайль и двоичные коды&lt;/h3>
&lt;h3 id="глава-4-dot-устройство-фонарика">Глава 4. Устройство фонарика&lt;/h3>
&lt;h3 id="глава-5-dot-заглядывая-за-угол">Глава 5. Заглядывая за угол&lt;/h3>
&lt;h3 id="глава-6-dot-телеграфы-и-реле">Глава 6. Телеграфы и реле&lt;/h3>
&lt;h3 id="глава-7-dot-наши-десять-цифр">Глава 7. Наши десять цифр&lt;/h3>
&lt;h3 id="глава-8-dot-альтернативы-десятке">Глава 8. Альтернативы десятке&lt;/h3>
&lt;h3 id="глава-9-dot-за-битом-бит">Глава 9. За битом бит&lt;/h3>
&lt;h3 id="глава-10-dot-логика-и-переключатели">Глава 10. Логика и переключатели&lt;/h3>
&lt;h3 id="глава-11-dot-логические-вентили">Глава 11. Логические вентили&lt;/h3>
&lt;h3 id="глава-12-dot-двоичный-сумматор">Глава 12. Двоичный сумматор&lt;/h3>
&lt;h3 id="глава-13-dot-а-как-насчет-вычитания">Глава 13. А как насчет вычитания?&lt;/h3>
&lt;h3 id="глава-14-dot-обратная-связь-и-триггеры">Глава 14. Обратная связь и триггеры&lt;/h3>
&lt;h3 id="глава-15-dot-байты-и-шестнадцатеричные-числа">Глава 15. Байты и шестнадцатеричные числа&lt;/h3>
&lt;h3 id="глава-16-dot-сборка-памяти">Глава 16. Сборка памяти&lt;/h3>
&lt;h3 id="глава-17-dot-автоматизация">Глава 17. Автоматизация&lt;/h3>
&lt;h3 id="глава-18-dot-от-счетов-к-микросхемам">Глава 18. От счетов к микросхемам&lt;/h3>
&lt;h3 id="глава-19-dot-два-классических-микропроцессора">Глава 19. Два классических микропроцессора&lt;/h3>
&lt;h3 id="глава-20-dot-набор-символов-ascii">Глава 20. Набор символов ASCII&lt;/h3>
&lt;h3 id="глава-21-dot-шины">Глава 21. Шины&lt;/h3>
&lt;h3 id="глава-22-dot-операционная-система">Глава 22. Операционная система&lt;/h3>
&lt;h3 id="глава-23-dot-фиксированная-точка-плавающая-точка">Глава 23. Фиксированная точка, плавающая точка&lt;/h3>
&lt;h3 id="глава-24-dot-языки-высокого-и-низкого-уровня">Глава 24. Языки высокого и низкого уровня&lt;/h3>
&lt;h3 id="глава-25-dot-графическая-революция">Глава 25. Графическая революция&lt;/h3>
&lt;h3 id="благодарности">Благодарности&lt;/h3>
&lt;p>Электронная теория - господствующая научная мудрость, характеризующая природу электричества.&lt;/p>
&lt;p>Любая материя вещества состоит из атомов.&lt;/p>
&lt;p>В атом входят (в порядке важности/структуры): ядро (как в нашей планете или как солнце) состоящее из нейтронов и протонов и электроны (которые вращаются вокруг ядра, как вокруг солнца).
Это планетарная модель (не совсем соответсвует действительности).&lt;/p>
&lt;p>Атомное число указывает сколько протонов в ядре у атома. При этом зная атомную массу, можно найти количество нейтронов. N = M - n, где N - количество нейтронов, M - атомная масса, n - атомный номер (равен числу протонов).&lt;/p>
&lt;p>Молекулы одного типа (воды, соли и т.д.) образуют соединение.&lt;/p>
&lt;p>Соединение молекул обычно образуют смесь (например водно-соляной раствор, в котором вода и соль сохраняют свои свойства).&lt;/p>
&lt;p>Количество электронов в атоме обычно равно количеству протонов (бывает что электроны вышибаются из атомов, образуя электричество).&lt;/p>
&lt;p>У протонов и электронов есть общее свойство - электрический заряд. У протона положительный, а у электрона отрицательный, нейтроны при этом нейтральны.&lt;/p>
&lt;p>Взаимосвязь между протонами и электронами можно описать как противоположные заряды притягиваются, одноименные отталкиваются.&lt;/p>
&lt;p>Протоны удерживаются в ядре благодоря сильному взаимодействию (цветовое взаимодействие, ядерное взаимодействие).&lt;/p>
&lt;p>Электричество в цепи это переход электронов от атома к атому.&lt;/p>
&lt;p>Минус батарейки - катод, или отрицательная клемма.&lt;/p>
&lt;p>Плюс батарейки - анод, или положительная клемма.&lt;/p>
&lt;p>Электроны идентичны&lt;/p>
&lt;p>Батареи можно подключить параллельно (для увеличения общего заряда ) или последовательно (для увеличения мощности).&lt;/p>
&lt;p>Проводник - обычно это вещество у которого на внешней оболочке (энергетический уровень или орбиталь) всего один электрон, и это вещество легко отдает его.&lt;/p>
&lt;p>Некоторые вещества сильнее сопротивляются току (это называется сопротивлением) их называют резисторы.&lt;/p>
&lt;p>При достаточно высоком напряжении практически любой материал приобретатет электропроводность.&lt;/p>
&lt;p>Чем толще провод тем выше его проводимость.&lt;/p>
&lt;p>Напряжение описывает потенциал для выполнения работы.&lt;/p>
&lt;p>Сила тока зависит от того сколько электронов мчится по проводнику.&lt;/p>
&lt;p>Ток подобен объему воды проходящему через трубу в ед. времени.
Напряжение давлению воды.
Сопротовиление ширина трубы.&lt;/p>
&lt;p>Объем воды текущий через трубу (ток) в еденицу времени прямо пропорионален давлению воды (напряжению) и обратно пропорионален толщине трубы (сопротивлению).&lt;/p></description></item></channel></rss>